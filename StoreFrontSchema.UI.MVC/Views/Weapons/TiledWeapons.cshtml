@*@model IEnumerable<StoreFrontSchema.DATA.EF.Models.Weapon>
*@
@*
    To utilize X.PagedList we will need to add the using statements below.
    We will also need to update the @model declaration to use IPagedList
*@

@model IPagedList<StoreFrontSchema.DATA.EF.Models.Weapon>

@using X.PagedList
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Tiled Weapons";
}


<section class="product_section layout_padding">
    <div class="container">
        <div class="heading_container heading_center">
            <h2>
                <em>Our</em> <span><em>Weapons</em></span>
            </h2>
        </div>

        <p align="center">
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="Create">Add New Weapon</a> <span>|</span>
            }
            <a asp-action="Index">Table View</a>
        </p>

        @*
        Implementing search: 4/20/23
        - Add a <form>
        - Add an <input> textbox
        - Add an <input> submit
        - Add an if() to display the number of results and search term
        - Add search logic to Controller Action
        *@

        <div class="row">

            <div class="offset-3 col-sm-6">

                <form asp-action="TiledWeapons" method="get">

                    @*
                    method="get" > Appends the key/value pairs from a
                    form onto the query string in our URL. The ? in the URL
                    indicates the beginning of aquery string.
                    Everything after that ? is a key/value pair(KVP)
                    *@
                    
                    <label for="categoryId" class="control-label text-center d-block">Filter by Category</label>
                    <select name="categoryId" class="form-control text-center mb-3" asp-items="ViewBag.CategoryId">
                            <option value="0">[Choose a Category]</option>
                    </select>

                    

                    @*
                    Inputs for search
                    *@
                    <input type="text" name="searchTerm" class="form-control text-center" placeholder="Search Weapons..." />
                    <input type="submit" value="Go" class="btn btn-primary text-center w-50 d-block" />


                </form>

                @*
                Display the number of results
                *@
                @if (ViewBag.NbrResults != null)
                {
                    <p class="mt-5 p-2 alert-warning text-center">
                        Showing @ViewBag.NbrResults result@(ViewBag.NbrResults > 1 ? "s" : "") for '@ViewBag.SearchTerm'...
                    </p>
                }

            </div>



    <div class="row">

            @foreach (var item in Model)
            {
                <div class="col-sm-6 col-md-4 col-lg-4">
                    <div class="box">
                        <div class="option_container">
                            <div class="options">
                                <a asp-action="Details" asp-route-id="@item.ProductId" class="option1">
                                    @item.ProductName
                                </a>
                                <a asp-action="AddToCart" asp-controller="ShoppingCart" asp-route-id="@item.ProductId" class="option2">
                                    Add To Cart
                                </a>
                            </div>
                        </div>
                        <div class="img-box">
                            <img src="~/images/@item.ProductImage" alt="@item.ProductName">
                        </div>
                        <div class="detail-box">
                            <h5>
                                @item.ProductName
                            </h5>
                            <h6>
                                @Html.DisplayFor(modelItem => item.ProductPrice)
                            </h6>
                        </div>
                    </div>
                </div>

            }

            <div class="row mt-5">
                    <div class="w-50 mx-auto text-center">
                        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                    </div>
                    <div class="w-100">
                        @Html.PagedListPager(
                        Model,
                        page => Url.Action("TiledWeapons",
                        new {page, searchTerm = ViewBag.SearchTerm, categoryId = ViewBag.Category })
                        )
                    </div>
            </div>

            <div class="btn btn-box">
                <a asp-action="TiledWeapons">
                    View all Weapons
                </a>
            </div>

        @*</div>
            <div class="btn-box">
            <a asp-action="TiledWeapons">
                View All products
            </a>
        </div>*@
    </div>
</section>
